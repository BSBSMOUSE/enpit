#+STARTUP: latexpreview
#+LATEX_CLASS: beamer_lecture
#+OPTIONS: H:4 num:3 toc:nil
#+BEAMER_THEME: Berkeley
#+BEAMER_COLOR_THEME: spruce
#+TITLE: ビジネスアプリケーション演習
#+AUTHOR: 中鉢 欣秀 \\ yc@aiit.ac.jp
#+DATE: 
#+LATEX_HEADER: \institute[AIIT]{産業技術大学院大学(AIIT)}
#+LATEX_HEADER: \hypersetup{colorlinks,linkcolor=,urlcolor=gray}


* [講義] ガイダンス
** はじめに
*** 自己紹介
**** 名前・出身地
***** 名前
      - 中鉢 欣秀（ちゅうばち よしひで）
***** 出身地
      - 宮城県仙台市
***** 肩書
      - 産業技術大学院大学 \\ 産業技術研究科 \\ 情報アーキテクチャ専攻 \\ 准教授
**** 連絡先
***** E-Mail
- yc@aiit...
***** Facebook
      - ychubachi
***** Twitter
      - ychubachi （あんまり使ってない）
***** Skype
      - ychubachi （あんまり使ってない）
**** 経歴(1)
***** 学歴
| 1991年 | 4月    | 慶應義塾大学環境情報学部 入学   |
| 1995年 | *10月* | 同大大学院 政策・メディア研究科 |
|        |        | 修士課程 入学                   |
| 1997年 | 10月   | 同大大学院 政策・メディア研究科 |
|        |        | 後期博士課程 入学               |
| 2004年 | 10月   | 同大大学院 政策・メディア研究科 |
|        |        | 後期博士課程 卒業               |
|        |        | 学位：博士（政策・メディア）    |

**** 経歴(2)
***** 職歴
| 1997年 | 10月 | 合資会社ニューメリック設立        |
|        |      | *社長就任*                        |
| 2005年 | 4月  | 独立行政法人科学技術振興機構      |
|        |      | PD級研究員                        |
|        |      | （長岡技術科学大学）              |
| 2006年 | 4月  | 産業技術大学院大学 産業技術研究科 |
|        |      | 情報アーキテクチャ専攻 准教授     |
**** 起業経験
***** 社名
      - 合資会社ニューメリック
***** 設立
      - 1997年
***** 資本金
      - *18万円*
**** 起業の背景
***** 設立当時の状況
      - Windows 95が普及（初期状態でインターネットは使えなかった）
      - 後輩のやっていたベンチャーの仕事を手伝って面白かった
***** 会社設立の理由
      - 「やってみたかった」から
      - 少しプログラムがかければ仕事はいくらでもあった
      - 後輩にそそのかされた・笑
**** 起業から学んだこと
      - 実プロジェクトの経験
      - 使える技術
      - お金は簡単には儲からない
*** 教育における関心事
**** TODO 教育における関心事
***** 情報技術産業の変化
     - マーケットが変化
     - ユーザ・ベンダ型モデルの終焉
***** 技術の進化と深化
     - 新しい技術
     - 意外と古い技術
***** モダンなソフトウエア開発者
   - 新しいサービスの企画から，ソフトウエアの実装まで何でもこなせる人
** 授業の全体像
*** 学習目標
**** 学習目標
***** 概要
      - ビジネスアプリケーションを構築するための基礎力
      - 分散型PBLを実施する上で必要となる知識やツールの使い方
***** 目的
      - 分散ソフトウェア開発のための道具
        - 開発環境とプログラミング言語Ruby
        - リモートリポジトリ（GitHub）
        - テスト自動化、継続的インテグレーション
        - PaaS（Platform as a Service）
      - これら活用するための自己組織的なチームワーク 
*** 前提知識と到達目標
**** 前提知識と到達目標
***** 前提とする知識
      - 情報系の学部レベルで基礎的な知識を持っていること
***** 上位到達目標
      - 授業で取り上げる各種ツールの高度な使い方に習熟する．
***** 最低到達目標
      - 授業で取り上げる各種ツールの基本的な使い方を身につける
*** 授業の形態
**** 授業の形態
***** 対面授業
      - 担当教員による講義・演習
***** 個人演習
      - 個人によるソフトウエア開発
***** グループ演習
      - グループによるソフトウエア開発
** 授業の方法
*** 講義
**** 講義
     - ツールの説明
     - ツールの使い方
*** 演習
**** 演習
     - 個人でツールを使えるようになる
     - グループでツールを使えるようになる
*** 課題
**** 課題
     - 個人でソフトウエアを作る
     - グループでソフトウエアを作る
*** 成績評価
**** 成績評価
***** 評価の方法
      - 課題提出
      - 実技試験
***** 評価の観点
      - 分散PBLで役に立つ知識が習得できたかどうか
* [講義] ソフトウエア開発の道具
** モダンなソフトウエア開発
*** ソフトウエア開発のための方法・言語・道具
**** TODO 方法・言語・道具の全体像
     - 3つの点から解説
     - ○が3つの図を挿入する
*** 方法と道具の関係
**** 方法と道具の関係
     - 方法を支えるための道具が開発されている
     - 相互に影響を与えている
     - 良い道具には設計概念として方法論が組み込まれている
*** 言語と道具の関係（基本的には分離）
**** 言語と道具の関係
***** 言語から独立した開発環境
     - 方法論を支えることが目的
     - プログラミング言語を問わない
***** 言語の備えるエコシステム
     - 今回の授業ではあまり取り上げない
     - 3Qのフレームワークの授業で取り上げる予定
*** モダンな開発環境の全体像
**** 仮想化技術（Virtualization）
**** ソーシャルコーディング（Social Coding）
**** クラウド技術（Cloud）
** 授業で利用する道具
*** 仮想化技術
**** VirtualBoxとは？
**** Vagrantとは？
*** ソーシャルコーディング
**** Gitとは？
**** GitHubとは？
*** クラウド技術
**** Travis CIとは？
**** Herokuとは？
* WIP
** クラウドのアカウント準備
*** クラウドのアカウント作成と提出
**** クラウドのアカウント作成
***** GitHub
     - GitHubにアカウントを作成する [[[https://github.com/join][Join GitHub · GitHub]]]
***** Heroku
      - Herokuにアカウントを作成する [[[https://id.heroku.com/signup][Heroku | Sign up]]]
***** Travis CI
      - GitHubアカウントでSign inする [[[https://travis-ci.org/][Travis CI]]]
* <演習> WIP
** TODO
*** TODO
**** 課題：アカウントの提出
     - GitHubとHerokuアカウントを作成し，提出してください [[[https://docs.google.com/forms/d/1SiKQqDLQw2YiJieYVS79ywpHIaNC3uI9cNPb_ddhC1Q/viewform?usp=send_form][enPiT演習アカウント(2014)]]]
* <演習> 開発環境の構築
** 開発環境のインストール
*** ソフトウエアのインストール
**** パッケージマネージャー
***** Windows
      - Chocolatey
***** Mac
      - Brew
***** Ubuntu
      - apt
**** インストールするソフトウエア
***** バージョン管理等
     - Git     
***** 仮想化環境
     - VirtualBox
***** 仮想化環境の制御
     - Vagrant
**** Chocolateyを用いたインストール作業の例
     - 動画
*** 仮想環境の設定
**** enPiT環境の入手
     1. git clone
     2. cd
     3. vagrant up
** 動作確認の方法
* [講義] 道具の概要説明
** バージョン管理の概念
*** シナリオ
**** HTMLによるWebページ
**** index.htmlを作りブラウザで開く
*** バージョン管理の基礎知識
**** diff
**** patch
**** sha1
** Git
*** Gitコマンドの使い方
*** git status
*** git stageとcommit
** GitHub
*** GitHubのWeb管理画面
*** git pushとclone
*** ForkとPull Request
*** GitHubのその他の機能
* ???もう一回講義増やす???
** Heroku
*** herokuのWeb管理画面
*** herokuコマンドによるdeploy
** Travis CI
*** Travis CIのWeb管理画面
* <演習> 静的サイトの開発演習(1)
** 1人でやる演習
*** 演習課題
**** 演習課題
     - あなたがよく知っている「歴史上の有名人」を一人取り上げる
     - その人を紹介するWebページを作成する
     - HTMLを作成する（リンクや画像の埋め込みにもチャレンジ）
     - gitでバージョン管理
     - GitHubにpushする
*** 
*** GitHubでリポジトリを作成
*** Webページを作成してGitHubにpushする
*** 作成した
** 2人でやる演習
*** 隣の人通しでPull Requestを送ってみる
** 「GitHubによるソースコード共有」演習
*** 
** 「HTMLでのサイト構築」演習
*** 演習の流れ
*** 
*** 2人でやる作業
*** グループでやる作業
* <演習> 動的サイトの開発演習(2)
** 「Ruby（Sinatra）によるサイト構築」演習
*** 演習の流れ
** Herokuでのテスト
* [講義] Ruby on Railsを用いた開発
** Ruby on Railsの全体像
** Scaffoldの作成と動作
*** Herokuへのdeploy
*** ScaffoldによるModelの拡張
** RSpecによるテスト
*** RSpecの実行
*** GitHubとTravis CI連携
*** Travis経由でのHerokuへのdeploy
* <演習> Ruby on Railsを用いた開発演習(1)
* <演習> Ruby on Railsを用いた開発演習(2)
* [講義] Web API活用したサービス構築
** 楽天API
* <演習> Web API活用したサービス構築演習(1)
* <演習> Web API活用したサービス構築演習(2)
* [講義] ミニプロジェクト
* <演習> ミニプロジェクト演習(1)
* <演習> ミニプロジェクト演習(2)
* Tasks
** DONE chocolateyのインストールをkazamでキャプチャする
   CLOSED: [2014-08-18 月 17:27]
** TODO 英語の原典を読めるようになること
** TODO Git bashを使う理由 cmd.exeだと，記号の扱い等が異なる
** TODO よくある間違い cdしないでgit initするとか．
** TODO OSをインストールし，手順書を参照しながら長々とコマンドを打つ，ということが不要になった．
